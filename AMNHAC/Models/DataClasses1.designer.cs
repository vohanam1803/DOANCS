#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AMNHAC.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AMNHAC")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPlaylist(Playlist instance);
    partial void UpdatePlaylist(Playlist instance);
    partial void DeletePlaylist(Playlist instance);
    partial void InsertTheloai(Theloai instance);
    partial void UpdateTheloai(Theloai instance);
    partial void DeleteTheloai(Theloai instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertAspNetUser(AspNetUser instance);
    partial void UpdateAspNetUser(AspNetUser instance);
    partial void DeleteAspNetUser(AspNetUser instance);
    partial void InsertVideo(Video instance);
    partial void UpdateVideo(Video instance);
    partial void DeleteVideo(Video instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Playlist> Playlists
		{
			get
			{
				return this.GetTable<Playlist>();
			}
		}
		
		public System.Data.Linq.Table<Theloai> Theloais
		{
			get
			{
				return this.GetTable<Theloai>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUser> AspNetUsers
		{
			get
			{
				return this.GetTable<AspNetUser>();
			}
		}
		
		public System.Data.Linq.Table<link> links
		{
			get
			{
				return this.GetTable<link>();
			}
		}
		
		public System.Data.Linq.Table<Video> Videos
		{
			get
			{
				return this.GetTable<Video>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Playlist")]
	public partial class Playlist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idmusic;
		
		private string _namemusic;
		
		private string _singer;
		
		private string _hinhmusic;
		
		private string _link;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidmusicChanging(int value);
    partial void OnidmusicChanged();
    partial void OnnamemusicChanging(string value);
    partial void OnnamemusicChanged();
    partial void OnsingerChanging(string value);
    partial void OnsingerChanged();
    partial void OnhinhmusicChanging(string value);
    partial void OnhinhmusicChanged();
    partial void OnlinkChanging(string value);
    partial void OnlinkChanged();
    #endregion
		
		public Playlist()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idmusic", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idmusic
		{
			get
			{
				return this._idmusic;
			}
			set
			{
				if ((this._idmusic != value))
				{
					this.OnidmusicChanging(value);
					this.SendPropertyChanging();
					this._idmusic = value;
					this.SendPropertyChanged("idmusic");
					this.OnidmusicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namemusic", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string namemusic
		{
			get
			{
				return this._namemusic;
			}
			set
			{
				if ((this._namemusic != value))
				{
					this.OnnamemusicChanging(value);
					this.SendPropertyChanging();
					this._namemusic = value;
					this.SendPropertyChanged("namemusic");
					this.OnnamemusicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_singer", DbType="NVarChar(50)")]
		public string singer
		{
			get
			{
				return this._singer;
			}
			set
			{
				if ((this._singer != value))
				{
					this.OnsingerChanging(value);
					this.SendPropertyChanging();
					this._singer = value;
					this.SendPropertyChanged("singer");
					this.OnsingerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hinhmusic", DbType="NVarChar(255)")]
		public string hinhmusic
		{
			get
			{
				return this._hinhmusic;
			}
			set
			{
				if ((this._hinhmusic != value))
				{
					this.OnhinhmusicChanging(value);
					this.SendPropertyChanging();
					this._hinhmusic = value;
					this.SendPropertyChanged("hinhmusic");
					this.OnhinhmusicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link", DbType="NVarChar(255)")]
		public string link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this.OnlinkChanging(value);
					this.SendPropertyChanging();
					this._link = value;
					this.SendPropertyChanged("link");
					this.OnlinkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Theloai")]
	public partial class Theloai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTheloai;
		
		private string _nameTheloai;
		
		private EntitySet<Person> _Persons;
		
		private EntitySet<Video> _Videos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTheloaiChanging(int value);
    partial void OnidTheloaiChanged();
    partial void OnnameTheloaiChanging(string value);
    partial void OnnameTheloaiChanged();
    #endregion
		
		public Theloai()
		{
			this._Persons = new EntitySet<Person>(new Action<Person>(this.attach_Persons), new Action<Person>(this.detach_Persons));
			this._Videos = new EntitySet<Video>(new Action<Video>(this.attach_Videos), new Action<Video>(this.detach_Videos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTheloai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTheloai
		{
			get
			{
				return this._idTheloai;
			}
			set
			{
				if ((this._idTheloai != value))
				{
					this.OnidTheloaiChanging(value);
					this.SendPropertyChanging();
					this._idTheloai = value;
					this.SendPropertyChanged("idTheloai");
					this.OnidTheloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameTheloai", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string nameTheloai
		{
			get
			{
				return this._nameTheloai;
			}
			set
			{
				if ((this._nameTheloai != value))
				{
					this.OnnameTheloaiChanging(value);
					this.SendPropertyChanging();
					this._nameTheloai = value;
					this.SendPropertyChanged("nameTheloai");
					this.OnnameTheloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Theloai_Person", Storage="_Persons", ThisKey="idTheloai", OtherKey="idTheloai")]
		public EntitySet<Person> Persons
		{
			get
			{
				return this._Persons;
			}
			set
			{
				this._Persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Theloai_Video", Storage="_Videos", ThisKey="idTheloai", OtherKey="idTheloai")]
		public EntitySet<Video> Videos
		{
			get
			{
				return this._Videos;
			}
			set
			{
				this._Videos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Theloai = this;
		}
		
		private void detach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Theloai = null;
		}
		
		private void attach_Videos(Video entity)
		{
			this.SendPropertyChanging();
			entity.Theloai = this;
		}
		
		private void detach_Videos(Video entity)
		{
			this.SendPropertyChanging();
			entity.Theloai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPerson;
		
		private string _namePerson;
		
		private string _Mota;
		
		private string _hinhPerson;
		
		private int _idTheloai;
		
		private EntityRef<Theloai> _Theloai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPersonChanging(int value);
    partial void OnidPersonChanged();
    partial void OnnamePersonChanging(string value);
    partial void OnnamePersonChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnhinhPersonChanging(string value);
    partial void OnhinhPersonChanged();
    partial void OnidTheloaiChanging(int value);
    partial void OnidTheloaiChanged();
    #endregion
		
		public Person()
		{
			this._Theloai = default(EntityRef<Theloai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPerson", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPerson
		{
			get
			{
				return this._idPerson;
			}
			set
			{
				if ((this._idPerson != value))
				{
					this.OnidPersonChanging(value);
					this.SendPropertyChanging();
					this._idPerson = value;
					this.SendPropertyChanged("idPerson");
					this.OnidPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namePerson", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string namePerson
		{
			get
			{
				return this._namePerson;
			}
			set
			{
				if ((this._namePerson != value))
				{
					this.OnnamePersonChanging(value);
					this.SendPropertyChanging();
					this._namePerson = value;
					this.SendPropertyChanged("namePerson");
					this.OnnamePersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(MAX)")]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hinhPerson", DbType="NVarChar(255)")]
		public string hinhPerson
		{
			get
			{
				return this._hinhPerson;
			}
			set
			{
				if ((this._hinhPerson != value))
				{
					this.OnhinhPersonChanging(value);
					this.SendPropertyChanging();
					this._hinhPerson = value;
					this.SendPropertyChanged("hinhPerson");
					this.OnhinhPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTheloai", DbType="Int NOT NULL")]
		public int idTheloai
		{
			get
			{
				return this._idTheloai;
			}
			set
			{
				if ((this._idTheloai != value))
				{
					if (this._Theloai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTheloaiChanging(value);
					this.SendPropertyChanging();
					this._idTheloai = value;
					this.SendPropertyChanged("idTheloai");
					this.OnidTheloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Theloai_Person", Storage="_Theloai", ThisKey="idTheloai", OtherKey="idTheloai", IsForeignKey=true)]
		public Theloai Theloai
		{
			get
			{
				return this._Theloai.Entity;
			}
			set
			{
				Theloai previousValue = this._Theloai.Entity;
				if (((previousValue != value) 
							|| (this._Theloai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Theloai.Entity = null;
						previousValue.Persons.Remove(this);
					}
					this._Theloai.Entity = value;
					if ((value != null))
					{
						value.Persons.Add(this);
						this._idTheloai = value.idTheloai;
					}
					else
					{
						this._idTheloai = default(int);
					}
					this.SendPropertyChanged("Theloai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
	public partial class AspNetUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Email;
		
		private bool _EmailConfirmed;
		
		private string _PasswordHash;
		
		private string _SecurityStamp;
		
		private string _PhoneNumber;
		
		private bool _PhoneNumberConfirmed;
		
		private bool _TwoFactorEnabled;
		
		private System.Nullable<System.DateTime> _LockoutEndDateUtc;
		
		private bool _LockoutEnabled;
		
		private int _AccessFailedCount;
		
		private string _UserName;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmedChanging(bool value);
    partial void OnEmailConfirmedChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmedChanging(bool value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnTwoFactorEnabledChanging(bool value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLockoutEndDateUtcChanged();
    partial void OnLockoutEnabledChanging(bool value);
    partial void OnLockoutEnabledChanged();
    partial void OnAccessFailedCountChanging(int value);
    partial void OnAccessFailedCountChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AspNetUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit NOT NULL")]
		public bool EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit NOT NULL")]
		public bool PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit NOT NULL")]
		public bool TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockoutEndDateUtc
		{
			get
			{
				return this._LockoutEndDateUtc;
			}
			set
			{
				if ((this._LockoutEndDateUtc != value))
				{
					this.OnLockoutEndDateUtcChanging(value);
					this.SendPropertyChanging();
					this._LockoutEndDateUtc = value;
					this.SendPropertyChanged("LockoutEndDateUtc");
					this.OnLockoutEndDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit NOT NULL")]
		public bool LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int NOT NULL")]
		public int AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.link")]
	public partial class link
	{
		
		private string _idtimkiem;
		
		private string _timkiem;
		
		public link()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idtimkiem", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string idtimkiem
		{
			get
			{
				return this._idtimkiem;
			}
			set
			{
				if ((this._idtimkiem != value))
				{
					this._idtimkiem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timkiem", DbType="NVarChar(50)")]
		public string timkiem
		{
			get
			{
				return this._timkiem;
			}
			set
			{
				if ((this._timkiem != value))
				{
					this._timkiem = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Video")]
	public partial class Video : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _title;
		
		private string _author;
		
		private string _link;
		
		private string _vitrivideo;
		
		private string _loaivideo;
		
		private System.Nullable<int> _idTheloai;
		
		private string _duration;
		
		private EntityRef<Theloai> _Theloai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnauthorChanging(string value);
    partial void OnauthorChanged();
    partial void OnlinkChanging(string value);
    partial void OnlinkChanged();
    partial void OnvitrivideoChanging(string value);
    partial void OnvitrivideoChanged();
    partial void OnloaivideoChanging(string value);
    partial void OnloaivideoChanged();
    partial void OnidTheloaiChanging(System.Nullable<int> value);
    partial void OnidTheloaiChanged();
    partial void OndurationChanging(string value);
    partial void OndurationChanged();
    #endregion
		
		public Video()
		{
			this._Theloai = default(EntityRef<Theloai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="NVarChar(150)")]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link", DbType="NVarChar(255)")]
		public string link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this.OnlinkChanging(value);
					this.SendPropertyChanging();
					this._link = value;
					this.SendPropertyChanged("link");
					this.OnlinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vitrivideo", DbType="NVarChar(50)")]
		public string vitrivideo
		{
			get
			{
				return this._vitrivideo;
			}
			set
			{
				if ((this._vitrivideo != value))
				{
					this.OnvitrivideoChanging(value);
					this.SendPropertyChanging();
					this._vitrivideo = value;
					this.SendPropertyChanged("vitrivideo");
					this.OnvitrivideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loaivideo", DbType="NVarChar(50)")]
		public string loaivideo
		{
			get
			{
				return this._loaivideo;
			}
			set
			{
				if ((this._loaivideo != value))
				{
					this.OnloaivideoChanging(value);
					this.SendPropertyChanging();
					this._loaivideo = value;
					this.SendPropertyChanged("loaivideo");
					this.OnloaivideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTheloai", DbType="Int")]
		public System.Nullable<int> idTheloai
		{
			get
			{
				return this._idTheloai;
			}
			set
			{
				if ((this._idTheloai != value))
				{
					if (this._Theloai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTheloaiChanging(value);
					this.SendPropertyChanging();
					this._idTheloai = value;
					this.SendPropertyChanged("idTheloai");
					this.OnidTheloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duration", DbType="NVarChar(255)")]
		public string duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				if ((this._duration != value))
				{
					this.OndurationChanging(value);
					this.SendPropertyChanging();
					this._duration = value;
					this.SendPropertyChanged("duration");
					this.OndurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Theloai_Video", Storage="_Theloai", ThisKey="idTheloai", OtherKey="idTheloai", IsForeignKey=true)]
		public Theloai Theloai
		{
			get
			{
				return this._Theloai.Entity;
			}
			set
			{
				Theloai previousValue = this._Theloai.Entity;
				if (((previousValue != value) 
							|| (this._Theloai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Theloai.Entity = null;
						previousValue.Videos.Remove(this);
					}
					this._Theloai.Entity = value;
					if ((value != null))
					{
						value.Videos.Add(this);
						this._idTheloai = value.idTheloai;
					}
					else
					{
						this._idTheloai = default(Nullable<int>);
					}
					this.SendPropertyChanged("Theloai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
